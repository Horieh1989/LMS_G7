@page "/moduledelete/{id:int}"
@inject IModuleDataService ModuleDataService
@inject NavigationManager Navigation

<h3>Delete Module</h3>

<div>
    <p>Are you sure you want to delete this module?</p>
    <p><strong>Module Id:</strong> @Module.Id</p>
    <p><strong>Module Name:</strong> @Module.Name</p>

    <button class="btn btn-danger" @onclick="HandleDelete">Delete</button>
    <button class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private Module Module { get; set; } = new Module();
    private string ErrorMessage { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Load module details when the component is initialized
        try
        {
            Module = await ModuleDataService.GetModule(Id);
        }
        catch (Exception e)
        {
            ErrorMessage = e.Message;
        }
    }

    private async Task HandleDelete()
    {
        try
        {
            await ModuleDataService.DeleteModule(Id);
            Navigation.NavigateTo("/modules"); // Redirect to the module list page after deletion
        }
        catch (Exception e)
        {
            ErrorMessage = e.Message;
        }
    }

    private void CancelDelete()
    {
        Navigation.NavigateTo("/modules"); // Redirect to the module list page without deletion
    }
}
